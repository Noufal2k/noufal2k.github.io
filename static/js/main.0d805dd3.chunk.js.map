{"version":3,"sources":["components/Header.js","components/About.js","components/Projects.js","components/ProfileBody.js","containers/App.js","registerServiceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","src","alt","href","About","title","Projects","style","border","borderRadius","display","flex","justifyContent","Component","ProfileBody","props","children","App","src_components_Header","src_components_ProfileBody","src_components_About","components_Projects","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ReactDOM","render","src_containers_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.0d805dd3.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"App-header\">\r\n            <img className=\"App-logo\" src=\"/logo.png\" alt=\"\" />\r\n            <div className=\"App-nav\">\r\n                <a href=\"/\">My Projects</a>\r\n                <a href=\"/\">About</a>\r\n            </div>    \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport './About.css';\r\n\r\nconst About = () => {\r\n    return (\r\n        <div className=\"about\">\r\n            <div className=\"about-img\">\r\n                <img src=\"/noufal-pic.jpg\" alt=\"\" />\r\n            </div>\r\n            <div className=\"about-contents\">\r\n                <h1>Noufal Kannan Kulavan</h1>\r\n                <h3>Web devoloper</h3>\r\n                <p>Email : kknoufal@gmail.com</p>\r\n                <p>\r\n                    <a className=\"fa-icon fa-icon-2x\" href=\"https://www.facebook.com/monuskk\" title=\"Facebook\">\r\n                        <i className=\"fab fa-facebook\"></i>\r\n                    </a>\r\n                    <a className=\"fa-icon fa-icon-2x\" href=\"https://github.com/noufal2k\" title=\"Github\">\r\n                        <i className=\"fab fa-github-square\"></i>\r\n                    </a>\r\n                </p>\r\n                <div className=\"about-text\">\r\n                    Hardworking and enthusiastic web developer able to deliver high standard, reliable and secure web application on time.\r\n                    <p>Stack: Nodejs, Express, React, Graphql, Mongodb/PostgreSQL</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default About;","import React, { Component } from 'react';\r\n\r\nclass Projects extends Component {\r\n    render() {\r\n        return (\r\n            <div style={\r\n                { border: '1px solid skyblue', borderRadius: '5px',\r\n                display:'flex', flex:'0 80%', justifyContent: 'space-around' }\r\n                }>\r\n                <div> Project 1 </div>\r\n                <div> Project 2 </div>\r\n                <div> Project 3 </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Projects;","import React from 'react';\r\nimport './ProfileBody.css';\r\n\r\nconst ProfileBody = (props) => {\r\n    return (\r\n        <div className=\"bodycontents\">\r\n           {props.children} \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileBody;","import React, { Component } from 'react';\nimport './App.css';\nimport Header from \"../components/Header\";\nimport About from \"../components/About\";\nimport Projects from '../components/Projects';\nimport ProfileBody from '../components/ProfileBody';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <ProfileBody>\n          <About />\n          <Projects />\n        </ProfileBody>\n        {/*\n        <CardList>\n          <Card />\n        </CardList>\n        */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}